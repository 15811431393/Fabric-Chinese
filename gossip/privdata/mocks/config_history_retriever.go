
//此源码被清华学神尹成大魔王专业翻译分析并修改
//尹成QQ77025077
//尹成微信18510341407
//尹成所在QQ群721929980
//尹成邮箱 yinc13@mails.tsinghua.edu.cn
//尹成毕业于清华大学,微软区块链领域全球最有价值专家
//https://mvp.microsoft.com/zh-cn/PublicProfile/4033620
//Code generated by mockery v1.0.0. 不要编辑。

package mocks

import ledger "github.com/hyperledger/fabric/core/ledger"
import mock "github.com/stretchr/testify/mock"

//configHistoryRetriever是为configHistoryRetriever类型自动生成的模拟类型
type ConfigHistoryRetriever struct {
	mock.Mock
}

//collectionconfigat提供具有给定字段的模拟函数：blocknum、chaincodename
func (_m *ConfigHistoryRetriever) CollectionConfigAt(blockNum uint64, chaincodeName string) (*ledger.CollectionConfigInfo, error) {
	ret := _m.Called(blockNum, chaincodeName)

	var r0 *ledger.CollectionConfigInfo
	if rf, ok := ret.Get(0).(func(uint64, string) *ledger.CollectionConfigInfo); ok {
		r0 = rf(blockNum, chaincodeName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ledger.CollectionConfigInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64, string) error); ok {
		r1 = rf(blockNum, chaincodeName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

//mostrecentcollectionconfigbelow提供了一个具有给定字段的模拟函数：blocknum、chaincodename
func (_m *ConfigHistoryRetriever) MostRecentCollectionConfigBelow(blockNum uint64, chaincodeName string) (*ledger.CollectionConfigInfo, error) {
	ret := _m.Called(blockNum, chaincodeName)

	var r0 *ledger.CollectionConfigInfo
	if rf, ok := ret.Get(0).(func(uint64, string) *ledger.CollectionConfigInfo); ok {
		r0 = rf(blockNum, chaincodeName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ledger.CollectionConfigInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64, string) error); ok {
		r1 = rf(blockNum, chaincodeName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
